#include "TakeupUtil.h"

#include <math.h>

#include <cmath>

static double PI = 3.14159265358979324;

double lattice::DoubleArmTakeupAngles(double mintakeup, double Larm, double dap, double dpdp) {
    // Derived from Mathematica https://github.com/caltechaiaa/LATTICE_Autonomy/blob/main/ShuttleModeling/statespace%20test.nb
    return 180 / PI * acos((1 / (128 * pow(dpdp, 2) * pow(Larm, 2))) * (-Larm * mintakeup * (128 * dap * dpdp + 64 * pow(dpdp, 2) + 32 * dap * mintakeup + 16 * dpdp * mintakeup) + sqrt(pow(Larm, 2) * pow(mintakeup, 2) * pow((128 * dap * dpdp + 64 * pow(dpdp, 2) + 32 * dap * mintakeup + 16 * dpdp * mintakeup), 2) - 256 * pow(dpdp, 2) * pow(Larm, 2) * (-64 * pow(dpdp, 2) * pow(Larm, 2) - 64 * pow(dap, 2) * dpdp * mintakeup - 64 * dap * pow(dpdp, 2) * mintakeup - 64 * dpdp * pow(Larm, 2) * mintakeup - 16 * pow(dap, 2) * pow(mintakeup, 2) - 16 * dap * dpdp * pow(mintakeup, 2) + 16 * pow(dpdp, 2) * pow(mintakeup, 2) - 16 * pow(Larm, 2) * pow(mintakeup, 2) + 8 * dpdp * pow(mintakeup, 3) + pow(mintakeup, 4)))));
}

double lattice::SingleArmTakeupAngle(double mintakeup, double Larm, double dap, double dpdp) {
    // Derived from Mathematica https://github.com/caltechaiaa/LATTICE_Autonomy/blob/main/ShuttleModeling/statespace%20test.nb
    return 180 / PI * acos((-(Larm * (16 * pow(dap, 3) + 24 * pow(dap, 2) * dpdp + 40 * dap * pow(dpdp, 2) + 16 * pow(dpdp, 3) - 32 * dap * dpdp * sqrt(pow(dap - Larm, 2)) - 16 * pow(dpdp, 2) * sqrt(pow(dap - Larm, 2)) - 32 * dap * dpdp * sqrt(pow(dap + dpdp - Larm, 2)) - 16 * pow(dpdp, 2) * sqrt(pow(dap + dpdp - Larm, 2)) + 16 * dap * sqrt(pow(dap - Larm, 2)) * sqrt(pow(dap + dpdp - Larm, 2)) + 8 * dpdp * sqrt(pow(dap - Larm, 2)) * sqrt(pow(dap + dpdp - Larm, 2)) - 32 * pow(dap, 2) * Larm - 32 * dap * dpdp * Larm - 8 * pow(dpdp, 2) * Larm + 16 * dap * pow(Larm, 2) + 8 * dpdp * pow(Larm, 2) + 32 * dap * dpdp * mintakeup + 16 * pow(dpdp, 2) * mintakeup - 16 * dap * sqrt(pow(dap - Larm, 2)) * mintakeup - 8 * dpdp * sqrt(pow(dap - Larm, 2)) * mintakeup - 16 * dap * sqrt(pow(dap + dpdp - Larm, 2)) * mintakeup - 8 * dpdp * sqrt(pow(dap + dpdp - Larm, 2)) * mintakeup + 8 * dap * pow(mintakeup, 2) + 4 * dpdp * pow(mintakeup, 2))) + sqrt(pow(Larm, 2) * pow(16 * pow(dap, 3) + 24 * pow(dap, 2) * dpdp + 40 * dap * pow(dpdp, 2) + 16 * pow(dpdp, 3) - 32 * dap * dpdp * sqrt(pow(dap - Larm, 2)) - 16 * pow(dpdp, 2) * sqrt(pow(dap - Larm, 2)) - 32 * dap * dpdp * sqrt(pow(dap + dpdp - Larm, 2)) - 16 * pow(dpdp, 2) * sqrt(pow(dap + dpdp - Larm, 2)) + 16 * dap * sqrt(pow(dap - Larm, 2)) * sqrt(pow(dap + dpdp - Larm, 2)) + 8 * dpdp * sqrt(pow(dap - Larm, 2)) * sqrt(pow(dap + dpdp - Larm, 2)) - 32 * pow(dap, 2) * Larm - 32 * dap * dpdp * Larm - 8 * pow(dpdp, 2) * Larm + 16 * dap * pow(Larm, 2) + 8 * dpdp * pow(Larm, 2) + 32 * dap * dpdp * mintakeup + 16 * pow(dpdp, 2) * mintakeup - 16 * dap * sqrt(pow(dap - Larm, 2)) * mintakeup - 8 * dpdp * sqrt(pow(dap - Larm, 2)) * mintakeup - 16 * dap * sqrt(pow(dap + dpdp - Larm, 2)) * mintakeup - 8 * dpdp * sqrt(pow(dap + dpdp - Larm, 2)) * mintakeup + 8 * dap * pow(mintakeup, 2) + 4 * dpdp * pow(mintakeup, 2), 2) - 16 * pow(dpdp, 2) * pow(Larm, 2) * (32 * pow(dap, 2) * pow(dpdp, 2) + 32 * dap * pow(dpdp, 3) + 32 * pow(dpdp, 4) - 16 * pow(dap, 2) * dpdp * sqrt(pow(dap - Larm, 2)) - 32 * dap * pow(dpdp, 2) * sqrt(pow(dap - Larm, 2)) - 48 * pow(dpdp, 3) * sqrt(pow(dap - Larm, 2)) - 16 * pow(dap, 2) * dpdp * sqrt(pow(dap + dpdp - Larm, 2)) - 32 * pow(dpdp, 3) * sqrt(pow(dap + dpdp - Larm, 2)) + 48 * pow(dpdp, 2) * sqrt(pow(dap - Larm, 2)) * sqrt(pow(dap + dpdp - Larm, 2)) - 16 * pow(dap, 3) * Larm - 24 * pow(dap, 2) * dpdp * Larm - 104 * dap * pow(dpdp, 2) * Larm - 48 * pow(dpdp, 3) * Larm + 64 * dap * dpdp * sqrt(pow(dap - Larm, 2)) * Larm + 48 * pow(dpdp, 2) * sqrt(pow(dap - Larm, 2)) * Larm + 64 * dap * dpdp * sqrt(pow(dap + dpdp - Larm, 2)) * Larm + 16 * pow(dpdp, 2) * sqrt(pow(dap + dpdp - Larm, 2)) * Larm - 16 * dap * sqrt(pow(dap - Larm, 2)) * sqrt(pow(dap + dpdp - Larm, 2)) * Larm - 8 * dpdp * sqrt(pow(dap - Larm, 2)) * sqrt(pow(dap + dpdp - Larm, 2)) * Larm + 32 * pow(dap, 2) * pow(Larm, 2) + 32 * dap * dpdp * pow(Larm, 2) + 36 * pow(dpdp, 2) * pow(Larm, 2) - 16 * dpdp * sqrt(pow(dap - Larm, 2)) * pow(Larm, 2) - 16 * dpdp * sqrt(pow(dap + dpdp - Larm, 2)) * pow(Larm, 2) - 16 * dap * pow(Larm, 3) - 8 * dpdp * pow(Larm, 3) + 32 * pow(dap, 2) * dpdp * mintakeup + 32 * dap * pow(dpdp, 2) * mintakeup + 48 * pow(dpdp, 3) * mintakeup - 8 * pow(dap, 2) * sqrt(pow(dap - Larm, 2)) * mintakeup - 16 * dap * dpdp * sqrt(pow(dap - Larm, 2)) * mintakeup - 56 * pow(dpdp, 2) * sqrt(pow(dap - Larm, 2)) * mintakeup - 8 * pow(dap, 2) * sqrt(pow(dap + dpdp - Larm, 2)) * mintakeup - 48 * pow(dpdp, 2) * sqrt(pow(dap + dpdp - Larm, 2)) * mintakeup + 48 * dpdp * sqrt(pow(dap - Larm, 2)) * sqrt(pow(dap + dpdp - Larm, 2)) * mintakeup - 96 * dap * dpdp * Larm * mintakeup - 48 * pow(dpdp, 2) * Larm * mintakeup + 32 * dap * sqrt(pow(dap - Larm, 2)) * Larm * mintakeup + 24 * dpdp * sqrt(pow(dap - Larm, 2)) * Larm * mintakeup + 32 * dap * sqrt(pow(dap + dpdp - Larm, 2)) * Larm * mintakeup + 8 * dpdp * sqrt(pow(dap + dpdp - Larm, 2)) * Larm * mintakeup + 32 * dpdp * pow(Larm, 2) * mintakeup - 8 * sqrt(pow(dap - Larm, 2)) * pow(Larm, 2) * mintakeup - 8 * sqrt(pow(dap + dpdp - Larm, 2)) * pow(Larm, 2) * mintakeup + 8 * pow(dap, 2) * pow(mintakeup, 2) + 8 * dap * dpdp * pow(mintakeup, 2) + 28 * pow(dpdp, 2) * pow(mintakeup, 2) - 24 * dpdp * sqrt(pow(dap - Larm, 2)) * pow(mintakeup, 2) - 24 * dpdp * sqrt(pow(dap + dpdp - Larm, 2)) * pow(mintakeup, 2) + 12 * sqrt(pow(dap - Larm, 2)) * sqrt(pow(dap + dpdp - Larm, 2)) * pow(mintakeup, 2) - 24 * dap * Larm * pow(mintakeup, 2) - 12 * dpdp * Larm * pow(mintakeup, 2) + 8 * pow(Larm, 2) * pow(mintakeup, 2) + 8 * dpdp * pow(mintakeup, 3) - 4 * sqrt(pow(dap - Larm, 2)) * pow(mintakeup, 3) - 4 * sqrt(pow(dap + dpdp - Larm, 2)) * pow(mintakeup, 3) + pow(mintakeup, 4)))) / (8. * pow(dpdp, 2) * pow(Larm, 2)));
}

double lattice::GetCorrespondingAngle(double mintakeup, double Larm, double dap, double dpdp, double otherAngle) {
    // Derived from Mathematica https://github.com/caltechaiaa/LATTICE_Autonomy/blob/main/ShuttleModeling/statespace%20test.nb
    otherAngle *= PI / 180.0;
    return 180 / PI * acos((-((2 * dap + dpdp) * Larm * (2 * pow(dap, 2) + 2 * dap * dpdp + 2 * pow(Larm, 2) + pow(2 * dpdp + mintakeup, 2))) + 2 * (2 * dap + dpdp) * Larm * ((2 * dap + dpdp) * Larm * cos(otherAngle) + mintakeup * sqrt(pow(dap, 2) + pow(Larm, 2) - 2 * dap * Larm * cos(otherAngle)) + mintakeup * sqrt(pow(dap + dpdp, 2) + pow(Larm, 2) - 2 * (dap + dpdp) * Larm * cos(otherAngle)) - sqrt(pow(dap, 2) + pow(Larm, 2) - 2 * dap * Larm * cos(otherAngle)) * sqrt(pow(dap + dpdp, 2) + pow(Larm, 2) - 2 * (dap + dpdp) * Larm * cos(otherAngle)) + 2 * dpdp * (sqrt(pow(dap, 2) + pow(Larm, 2) - 2 * dap * Larm * cos(otherAngle)) + sqrt(pow(dap + dpdp, 2) + pow(Larm, 2) - 2 * (dap + dpdp) * Larm * cos(otherAngle)))) + 2 * sqrt(pow(Larm, 2) * (8 * pow(dap, 6) + 24 * pow(dap, 5) * dpdp + 2 * pow(dap, 4) * (37 * pow(dpdp, 2) + 16 * pow(Larm, 2) + 24 * dpdp * mintakeup + 6 * pow(mintakeup, 2) + 4 * sqrt(pow(dap, 2) + pow(Larm, 2) - 2 * dap * Larm * cos(otherAngle)) * sqrt(pow(dap + dpdp, 2) + pow(Larm, 2) - 2 * (dap + dpdp) * Larm * cos(otherAngle)) - 16 * dpdp * (sqrt(pow(dap, 2) + pow(Larm, 2) - 2 * dap * Larm * cos(otherAngle)) + sqrt(pow(dap + dpdp, 2) + pow(Larm, 2) - 2 * (dap + dpdp) * Larm * cos(otherAngle))) - 8 * mintakeup * (sqrt(pow(dap, 2) + pow(Larm, 2) - 2 * dap * Larm * cos(otherAngle)) + sqrt(pow(dap + dpdp, 2) + pow(Larm, 2) - 2 * (dap + dpdp) * Larm * cos(otherAngle)))) + pow(dpdp, 2) * pow(Larm, 2) * (5 * pow(dpdp, 2) + 2 * pow(Larm, 2) + pow(mintakeup, 2) + 2 * sqrt(pow(dap, 2) + pow(Larm, 2) - 2 * dap * Larm * cos(otherAngle)) * sqrt(pow(dap + dpdp, 2) + pow(Larm, 2) - 2 * (dap + dpdp) * Larm * cos(otherAngle)) - 2 * mintakeup * (sqrt(pow(dap, 2) + pow(Larm, 2) - 2 * dap * Larm * cos(otherAngle)) + sqrt(pow(dap + dpdp, 2) + pow(Larm, 2) - 2 * (dap + dpdp) * Larm * cos(otherAngle))) - 4 * dpdp * (-mintakeup + sqrt(pow(dap, 2) + pow(Larm, 2) - 2 * dap * Larm * cos(otherAngle)) + sqrt(pow(dap + dpdp, 2) + pow(Larm, 2) - 2 * (dap + dpdp) * Larm * cos(otherAngle)))) + 4 * pow(dap, 3) * dpdp * (27 * pow(dpdp, 2) + 16 * pow(Larm, 2) + 6 * pow(mintakeup, 2) - 10 * mintakeup * sqrt(pow(dap, 2) + pow(Larm, 2) - 2 * dap * Larm * cos(otherAngle)) - 6 * mintakeup * sqrt(pow(dap + dpdp, 2) + pow(Larm, 2) - 2 * (dap + dpdp) * Larm * cos(otherAngle)) + 4 * sqrt(pow(dap, 2) + pow(Larm, 2) - 2 * dap * Larm * cos(otherAngle)) * sqrt(pow(dap + dpdp, 2) + pow(Larm, 2) - 2 * (dap + dpdp) * Larm * cos(otherAngle)) - 4 * dpdp * (-6 * mintakeup + 5 * sqrt(pow(dap, 2) + pow(Larm, 2) - 2 * dap * Larm * cos(otherAngle)) + 3 * sqrt(pow(dap + dpdp, 2) + pow(Larm, 2) - 2 * (dap + dpdp) * Larm * cos(otherAngle)))) + dap * dpdp * (36 * pow(dpdp, 4) + 8 * pow(Larm, 4) - 4 * pow(dpdp, 3) * (-13 * mintakeup + 13 * sqrt(pow(dap, 2) + pow(Larm, 2) - 2 * dap * Larm * cos(otherAngle)) + 9 * sqrt(pow(dap + dpdp, 2) + pow(Larm, 2) - 2 * (dap + dpdp) * Larm * cos(otherAngle))) + pow(dpdp, 2) * (58 * pow(Larm, 2) + 29 * pow(mintakeup, 2) - 58 * mintakeup * sqrt(pow(dap, 2) + pow(Larm, 2) - 2 * dap * Larm * cos(otherAngle)) - 50 * mintakeup * sqrt(pow(dap + dpdp, 2) + pow(Larm, 2) - 2 * (dap + dpdp) * Larm * cos(otherAngle)) + 50 * sqrt(pow(dap, 2) + pow(Larm, 2) - 2 * dap * Larm * cos(otherAngle)) * sqrt(pow(dap + dpdp, 2) + pow(Larm, 2) - 2 * (dap + dpdp) * Larm * cos(otherAngle))) - 8 * dpdp * pow(Larm, 2) * (-6 * mintakeup + 4 * (sqrt(pow(dap, 2) + pow(Larm, 2) - 2 * dap * Larm * cos(otherAngle)) + sqrt(pow(dap + dpdp, 2) + pow(Larm, 2) - 2 * (dap + dpdp) * Larm * cos(otherAngle)))) + 4 * pow(Larm, 2) * (3 * pow(mintakeup, 2) + 2 * sqrt(pow(dap, 2) + pow(Larm, 2) - 2 * dap * Larm * cos(otherAngle)) * sqrt(pow(dap + dpdp, 2) + pow(Larm, 2) - 2 * (dap + dpdp) * Larm * cos(otherAngle)) - 4 * mintakeup * (sqrt(pow(dap, 2) + pow(Larm, 2) - 2 * dap * Larm * cos(otherAngle)) + sqrt(pow(dap + dpdp, 2) + pow(Larm, 2) - 2 * (dap + dpdp) * Larm * cos(otherAngle)))) + pow(mintakeup, 2) * (pow(mintakeup, 2) + 12 * sqrt(pow(dap, 2) + pow(Larm, 2) - 2 * dap * Larm * cos(otherAngle)) * sqrt(pow(dap + dpdp, 2) + pow(Larm, 2) - 2 * (dap + dpdp) * Larm * cos(otherAngle)) - 4 * mintakeup * (sqrt(pow(dap, 2) + pow(Larm, 2) - 2 * dap * Larm * cos(otherAngle)) + sqrt(pow(dap + dpdp, 2) + pow(Larm, 2) - 2 * (dap + dpdp) * Larm * cos(otherAngle)))) + 8 * dpdp * mintakeup * (pow(mintakeup, 2) + 6 * sqrt(pow(dap, 2) + pow(Larm, 2) - 2 * dap * Larm * cos(otherAngle)) * sqrt(pow(dap + dpdp, 2) + pow(Larm, 2) - 2 * (dap + dpdp) * Larm * cos(otherAngle)) - 3 * mintakeup * (sqrt(pow(dap, 2) + pow(Larm, 2) - 2 * dap * Larm * cos(otherAngle)) + sqrt(pow(dap + dpdp, 2) + pow(Larm, 2) - 2 * (dap + dpdp) * Larm * cos(otherAngle))))) + pow(dap, 2) * (86 * pow(dpdp, 4) + 8 * pow(Larm, 4) - 4 * pow(dpdp, 3) * (-25 * mintakeup + 25 * sqrt(pow(dap, 2) + pow(Larm, 2) - 2 * dap * Larm * cos(otherAngle)) + 13 * sqrt(pow(dap + dpdp, 2) + pow(Larm, 2) - 2 * (dap + dpdp) * Larm * cos(otherAngle))) + pow(dpdp, 2) * (90 * pow(Larm, 2) + 41 * pow(mintakeup, 2) - 82 * mintakeup * sqrt(pow(dap, 2) + pow(Larm, 2) - 2 * dap * Larm * cos(otherAngle)) - 58 * mintakeup * sqrt(pow(dap + dpdp, 2) + pow(Larm, 2) - 2 * (dap + dpdp) * Larm * cos(otherAngle)) + 58 * sqrt(pow(dap, 2) + pow(Larm, 2) - 2 * dap * Larm * cos(otherAngle)) * sqrt(pow(dap + dpdp, 2) + pow(Larm, 2) - 2 * (dap + dpdp) * Larm * cos(otherAngle))) - 8 * dpdp * pow(Larm, 2) * (-6 * mintakeup + 4 * (sqrt(pow(dap, 2) + pow(Larm, 2) - 2 * dap * Larm * cos(otherAngle)) + sqrt(pow(dap + dpdp, 2) + pow(Larm, 2) - 2 * (dap + dpdp) * Larm * cos(otherAngle)))) + 4 * pow(Larm, 2) * (3 * pow(mintakeup, 2) + 2 * sqrt(pow(dap, 2) + pow(Larm, 2) - 2 * dap * Larm * cos(otherAngle)) * sqrt(pow(dap + dpdp, 2) + pow(Larm, 2) - 2 * (dap + dpdp) * Larm * cos(otherAngle)) - 4 * mintakeup * (sqrt(pow(dap, 2) + pow(Larm, 2) - 2 * dap * Larm * cos(otherAngle)) + sqrt(pow(dap + dpdp, 2) + pow(Larm, 2) - 2 * (dap + dpdp) * Larm * cos(otherAngle)))) + pow(mintakeup, 2) * (pow(mintakeup, 2) + 12 * sqrt(pow(dap, 2) + pow(Larm, 2) - 2 * dap * Larm * cos(otherAngle)) * sqrt(pow(dap + dpdp, 2) + pow(Larm, 2) - 2 * (dap + dpdp) * Larm * cos(otherAngle)) - 4 * mintakeup * (sqrt(pow(dap, 2) + pow(Larm, 2) - 2 * dap * Larm * cos(otherAngle)) + sqrt(pow(dap + dpdp, 2) + pow(Larm, 2) - 2 * (dap + dpdp) * Larm * cos(otherAngle)))) + 8 * dpdp * mintakeup * (pow(mintakeup, 2) + 6 * sqrt(pow(dap, 2) + pow(Larm, 2) - 2 * dap * Larm * cos(otherAngle)) * sqrt(pow(dap + dpdp, 2) + pow(Larm, 2) - 2 * (dap + dpdp) * Larm * cos(otherAngle)) - 3 * mintakeup * (sqrt(pow(dap, 2) + pow(Larm, 2) - 2 * dap * Larm * cos(otherAngle)) + sqrt(pow(dap + dpdp, 2) + pow(Larm, 2) - 2 * (dap + dpdp) * Larm * cos(otherAngle))))) + 2 * Larm * cos(otherAngle) * (-16 * pow(dap, 5) - 40 * pow(dap, 4) * dpdp - pow(dpdp, 3) * pow(Larm, 2) - 2 * pow(dap, 3) * (41 * pow(dpdp, 2) + 8 * pow(Larm, 2) + 24 * dpdp * mintakeup + 6 * pow(mintakeup, 2) + 4 * sqrt(pow(dap, 2) + pow(Larm, 2) - 2 * dap * Larm * cos(otherAngle)) * sqrt(pow(dap + dpdp, 2) + pow(Larm, 2) - 2 * (dap + dpdp) * Larm * cos(otherAngle)) - 16 * dpdp * (sqrt(pow(dap, 2) + pow(Larm, 2) - 2 * dap * Larm * cos(otherAngle)) + sqrt(pow(dap + dpdp, 2) + pow(Larm, 2) - 2 * (dap + dpdp) * Larm * cos(otherAngle))) - 8 * mintakeup * (sqrt(pow(dap, 2) + pow(Larm, 2) - 2 * dap * Larm * cos(otherAngle)) + sqrt(pow(dap + dpdp, 2) + pow(Larm, 2) - 2 * (dap + dpdp) * Larm * cos(otherAngle)))) + dap * pow(dpdp, 2) * (-25 * pow(dpdp, 2) - 10 * pow(Larm, 2) - 6 * pow(mintakeup, 2) - 4 * sqrt(pow(dap, 2) + pow(Larm, 2) - 2 * dap * Larm * cos(otherAngle)) * sqrt(pow(dap + dpdp, 2) + pow(Larm, 2) - 2 * (dap + dpdp) * Larm * cos(otherAngle)) + 4 * mintakeup * (3 * sqrt(pow(dap, 2) + pow(Larm, 2) - 2 * dap * Larm * cos(otherAngle)) + sqrt(pow(dap + dpdp, 2) + pow(Larm, 2) - 2 * (dap + dpdp) * Larm * cos(otherAngle))) + 8 * dpdp * (-3 * mintakeup + 3 * sqrt(pow(dap, 2) + pow(Larm, 2) - 2 * dap * Larm * cos(otherAngle)) + sqrt(pow(dap + dpdp, 2) + pow(Larm, 2) - 2 * (dap + dpdp) * Larm * cos(otherAngle)))) + pow(dap, 2) * dpdp * (-83 * pow(dpdp, 2) + 8 * dpdp * (-9 * mintakeup + 7 * sqrt(pow(dap, 2) + pow(Larm, 2) - 2 * dap * Larm * cos(otherAngle)) + 5 * sqrt(pow(dap + dpdp, 2) + pow(Larm, 2) - 2 * (dap + dpdp) * Larm * cos(otherAngle))) - 2 * (12 * pow(Larm, 2) + 9 * pow(mintakeup, 2) + 6 * sqrt(pow(dap, 2) + pow(Larm, 2) - 2 * dap * Larm * cos(otherAngle)) * sqrt(pow(dap + dpdp, 2) + pow(Larm, 2) - 2 * (dap + dpdp) * Larm * cos(otherAngle)) - 2 * mintakeup * (7 * sqrt(pow(dap, 2) + pow(Larm, 2) - 2 * dap * Larm * cos(otherAngle)) + 5 * sqrt(pow(dap + dpdp, 2) + pow(Larm, 2) - 2 * (dap + dpdp) * Larm * cos(otherAngle)))))) + 2 * dap * (dap + dpdp) * (8 * pow(dap, 2) + 8 * dap * dpdp + pow(dpdp, 2)) * pow(Larm, 2) * cos(2 * otherAngle)))) / (2. * pow(dpdp, 2) * pow(Larm, 2)));
}

double lattice::GetTakeup(double leftArmAngle, double rightArmAngle, double Larm, double dap, double dpdp) {
    // Derived on confluence: https://lattice22.atlassian.net/wiki/spaces/L/pages/43352125/Shuttle+Model#Takeup
    leftArmAngle *= PI / 180.0;
    rightArmAngle *= PI / 180.0;
    return -2 * dpdp + sqrt(pow(dap, 2) + pow(Larm, 2) - 2 * dap * Larm * cos(leftArmAngle)) + sqrt(pow(dap + dpdp, 2) + pow(Larm, 2) - 2 * (dap + dpdp) * Larm * cos(leftArmAngle)) + sqrt(pow(dap, 2) + pow(Larm, 2) - 2 * dap * Larm * cos(rightArmAngle)) + sqrt(pow(dap + dpdp, 2) + pow(Larm, 2) - 2 * (dap + dpdp) * Larm * cos(rightArmAngle));
}

double lattice::GetRelativeArmRates(double doubleArmAngle, double singleArmAngle) {
    // If we approximate the level sets here as linear: https://lattice22.atlassian.net/wiki/spaces/L/pages/43352125/Shuttle+Model#Takeup-Takeaways
    // Then the slope of the level sets can be determined from two points: (doubleArmAngle, doubleArmAngle), (0, singleArmAngle)
    // Thus: (doubleArmAngle - 0)/(doubleArmAngle - singleArmAngle)
    return doubleArmAngle / (doubleArmAngle - singleArmAngle);
}